#!/usr/bin/env bash
#
# TODO put stuff here
#
#set -x


# Show message then die with exit_code
die()
{
  local exit_code=0
  [[ $1 == -* ]] && exit_code=${1/-} && shift
  echo $*
  exit ${exit_code}
}


# Show help text then exit
help()
{
  echo "USAGE: ${PROGNAME} [OPTIONS] [COMMAND]"
  echo
  echo "Iterate over a number of git repositories, optionally running COMMAND"
  echo "in each one. If no COMMAND is specified, the found repositories are"
  echo "listed. Repositories are defined as directories that contain a"
  echo "directory named \".git\"; the current directory, or each directory in"
  echo "GITREPOS_PATH, are searched for matches."
  echo
  echo "OPTIONS"
  echo "  -h|--help           deisplay this message then exit"
  echo "  -l|--long           display full pathname rather than short repo name"
  echo "  -n|--name PATTERN   filter repo names by shell glob PATTERN"
  echo
  echo "BUILTIN COMMANDS"
  echo "  ls|list             list found repositories (the default action)"
  exit
}


# Return list of repository paths
repos()
{
  local path
  local paths=${GITREPOS_PATH//:/ }

  [[ ${paths} ]] || paths=${PWD}

  for path in ${paths}
  do
    find ${path} -mindepth 2 -maxdepth 2 -type d -name .git | sed -e 's#/\.git$##'
  done
}


# Show a list of found repositories
list()
{
  for repo in $(repos)
  do
    [[ ${FILTER} && $(basename ${repo}) != ${FILTER} ]] && continue
    [[ ${LONG} ]] && echo ${repo} || echo $(basename ${repo})
  done
}


# Process arguments
while true
do
  case $1 in
    -h|--help)
      help
      ;;

    -l|--long)
      LONG=true
      shift
      ;;

    -n|--name)
      FILTER=$2
      shift 2
      ;;

    ls|list)
      list
      exit
      ;;

    *)
      break
      ;;
  esac
done


if [[ $1 ]]
then
  for repo in $(repos)
  do
    [[ ${FILTER} && $(basename ${repo}) != ${FILTER} ]] && continue
    echo
    echo ===== ${repo}: git "$@" =====
    cd ${repo}
    git "$@"
    exit_code=$?
    [[ ${exit_code} -eq 0 ]] || die -${exit_code} "Aborting due to git error."
  done
else
  list
fi
